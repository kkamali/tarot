{"ast":null,"code":"var _jsxFileName = \"/Users/kathleenkamali/Documents/tarot/rose_hunter_tarot/src/components/Dragonfly.js\";\nimport React, { useEffect, useState } from 'react';\nimport Drawn from './Drawn';\nimport { Grid } from '@material-ui/core';\nimport ReadingFooter from './ReadingFooter';\nexport default function Dragonfly() {\n  const [drawn, setDrawn] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  async function fetchCards() {\n    const response = await fetch('/spreads/dragonfly');\n    const json = await response.json();\n    setDrawn(json);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchCards();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading ? \"Reading the cards...\" : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Drawn, {\n    card: drawn[8],\n    spread_pos: \"Vision\",\n    spread_meaning: \"What can be done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Drawn, {\n    card: drawn[6],\n    spread_pos: \"Wisdom\",\n    spread_meaning: \"What you can't control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Drawn, {\n    card: drawn[2],\n    spread_pos: \"Mind\",\n    spread_meaning: \"The emotional landscape\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Drawn, {\n    card: drawn[3],\n    spread_pos: \"Body\",\n    spread_meaning: \"The physical landscape\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Drawn, {\n    card: drawn[7],\n    spread_pos: \"Intellect\",\n    spread_meaning: \"What you can control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Drawn, {\n    card: drawn[4],\n    spread_pos: \"Mystery\",\n    spread_meaning: \"The hidden influence\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Drawn, {\n    card: drawn[0],\n    spread_pos: \"Present\",\n    spread_meaning: \"The situation as it stands\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Drawn, {\n    card: drawn[5],\n    spread_meaning: \"The obstacle\",\n    spread_pos: \"Strife\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Drawn, {\n    card: drawn[1],\n    spread_meaning: \"What brought you here\",\n    spread_pos: \"Past\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(ReadingFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/kathleenkamali/Documents/tarot/rose_hunter_tarot/src/components/Dragonfly.js"],"names":["React","useEffect","useState","Drawn","Grid","ReadingFooter","Dragonfly","drawn","setDrawn","loading","setLoading","fetchCards","response","fetch","json","flexGrow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Drawn from './Drawn'\nimport { Grid } from '@material-ui/core'\nimport ReadingFooter from './ReadingFooter'\n\nexport default function Dragonfly() {\n  const [drawn, setDrawn] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  async function fetchCards() {\n    const response = await fetch('/spreads/dragonfly')\n    const json = await response.json()\n\n    setDrawn(json)\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    fetchCards()\n  }, [])\n\n  return (\n    <>\n      {loading ? (\n        \"Reading the cards...\"\n      ) : (\n          <div style={{ flexGrow: 1 }}>\n            <Grid container justify=\"center\">\n              <Grid item>\n                <Drawn card={drawn[8]} spread_pos=\"Vision\" spread_meaning=\"What can be done\" />\n              </Grid>\n              <Grid container justify=\"center\">\n                <Grid item>\n                  <Drawn card={drawn[6]} spread_pos=\"Wisdom\" spread_meaning=\"What you can't control\" />\n                </Grid>\n                <Grid item>\n                  <Drawn card={drawn[2]} spread_pos=\"Mind\" spread_meaning=\"The emotional landscape\" />\n                </Grid>\n                <Grid item>\n                  <Drawn card={drawn[3]} spread_pos=\"Body\" spread_meaning=\"The physical landscape\" />\n                </Grid>\n                <Grid item>\n                  <Drawn card={drawn[7]} spread_pos=\"Intellect\" spread_meaning=\"What you can control\" />\n                </Grid>\n              </Grid>\n              <Grid container justify=\"center\">\n                <Grid item>\n                  <Drawn card={drawn[4]} spread_pos=\"Mystery\" spread_meaning=\"The hidden influence\" />\n                </Grid>\n                <Grid item>\n                  <Drawn card={drawn[0]} spread_pos=\"Present\" spread_meaning=\"The situation as it stands\" />\n                </Grid>\n                <Grid item>\n                  <Drawn card={drawn[5]} spread_meaning=\"The obstacle\" spread_pos=\"Strife\" />\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Drawn card={drawn[1]} spread_meaning='What brought you here' spread_pos=\"Past\" />\n              </Grid>\n            </Grid>\n          </div>\n        )\n      }\n      <ReadingFooter />\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}