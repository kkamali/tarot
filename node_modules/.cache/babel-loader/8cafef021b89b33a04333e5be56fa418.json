{"ast":null,"code":"var _jsxFileName = \"/Users/kathleenkamali/Documents/tarot/rose_hunter_tarot/src/components/Advice.js\";\nimport React, { useState, useEffect } from 'react';\nimport Drawn from './Drawn';\nimport { Grid, Container } from '@material-ui/core';\nexport default function Advice() {\n  const [drawn, setDrawn] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  async function fetchCards() {\n    const response = await fetch('http://localhost:3000/spreads/advice');\n    const json = await response.json();\n    setDrawn(json);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchCards();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading ? \"Reading the cards...\" : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Drawn, {\n    card: drawn[0],\n    spread_pos: \"Recognition\",\n    spread_meaning: \"Something you've been doing well\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Drawn, {\n    card: drawn[1],\n    spread_pos: \"Admonition\",\n    spread_meaning: \"Something you can improve\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Drawn, {\n    card: drawn[2],\n    spread_pos: \"Advice\",\n    spread_meaning: \"What you should do\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/spreads\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 20\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Get another reading\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/deck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 20\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"See all the cards\"))));\n}","map":{"version":3,"sources":["/Users/kathleenkamali/Documents/tarot/rose_hunter_tarot/src/components/Advice.js"],"names":["React","useState","useEffect","Drawn","Grid","Container","Advice","drawn","setDrawn","loading","setLoading","fetchCards","response","fetch","json","flexGrow","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Drawn from './Drawn'\nimport { Grid, Container } from '@material-ui/core'\n\nexport default function Advice() {\n  const [drawn, setDrawn] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  async function fetchCards() {\n    const response = await fetch('http://localhost:3000/spreads/advice')\n    const json = await response.json()\n\n    setDrawn(json)\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    fetchCards()\n  }, [])\n\n  return (\n    <>\n      {loading ? (\n        \"Reading the cards...\"\n      ) : (\n          <div style={{ flexGrow: 1 }}>\n            <Grid container justify=\"center\">\n              <Grid item>\n                <Drawn card={drawn[0]} spread_pos=\"Recognition\" spread_meaning=\"Something you've been doing well\" />\n              </Grid>\n              <Grid item>\n                <Drawn card={drawn[1]} spread_pos=\"Admonition\" spread_meaning=\"Something you can improve\" />\n              </Grid>\n              <Grid item>\n                <Drawn card={drawn[2]} spread_pos=\"Advice\" spread_meaning=\"What you should do\" />\n              </Grid>\n            </Grid>\n          </div>\n        )}\n      <Container>\n        <Link to=\"/spreads\">\n          <Button style={{ margin: 20 }} variant=\"contained\" color=\"primary\">\n            Get another reading\n        </Button>\n        </Link>\n        <Link to=\"/deck\">\n          <Button style={{ margin: 20 }} variant=\"contained\" color=\"primary\">\n            See all the cards\n        </Button>\n        </Link>\n      </Container>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}